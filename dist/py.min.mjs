import _ from"node:path";import e from"node:fs";import{spawn as y}from"node:child_process";var[d,p,v,m]=function(){return P()?["python.exe","python","pip.exe","pip"]:I()?["python","python","pip","pip"]:x()?["python","python","pip","pip"]:[null,null,null,null]}();function P(){return process.platform==="win32"}function I(){return process.platform==="darwin"}function x(){return process.platform==="linux"}function c(t,i){return new Promise(function(s,l){let a="",h="",o=y(t,i);o.stdout.on("data",function(r){a+=r.toString()}),o.stderr.on("data",function(r){h+=r.toString()}),o.on("error",function(r){l(r)}),o.on("exit",function(r,S){s({stdout:a,stderr:h})})})}function u(t){e.existsSync(t)||e.mkdirSync(t,{recursive:!0})}function f(t){e.existsSync(t)&&e.rmSync(t,{recursive:!0})}var n=class{constructor(i){i=i||".",this.__installPath__=i,this.__venvPath__=_.join(i,"venv"),this.__scriptsPath__=_.join(i,"venv","Scripts"),this.__pythonPath__=_.join(i,"venv","Scripts",d),this.__pipPath__=_.join(i,"venv","Scripts",v),this.__isInitialized__=this.chkInit()}};n.prototype.getPyCmd=function(){return this.__isInitialized__?this.__pythonPath__:p};n.prototype.getPipCmd=function(){return this.__isInitialized__?this.__pipPath__:m};n.prototype.chkInit=function(){return e.existsSync(this.__installPath__)&&e.existsSync(this.__venvPath__)&&e.existsSync(this.__scriptsPath__)&&e.existsSync(this.__pythonPath__)&&e.existsSync(this.__pipPath__)};n.prototype.init=async function(t){if(!p)throw new Error(`${process.platform} has not been supported.`);if(!this.__isInitialized__&&(u(this.__installPath__),t&&f(this.__venvPath__),u(this.__venvPath__),await c(p,["-m","venv",this.__venvPath__]),this.__isInitialized__=this.chkInit(),!this.__isInitialized__))throw new Error("Can not create venv.")};n.prototype.destory=async function(){f(this.__venvPath__),this.__isInitialized__=this.chkInit()};n.prototype.freeze=async function(){return await c(this.getPipCmd(),["freeze"])};n.prototype.getModules=async function(){let{stdout:t,stderr:i}=await this.freeze();return t.replace(/\r\n/g,`
`).replace(/\n$/,"").split(/\n/).map(function(s){return{name:s.split("==")[0],version:s.split("==")[1]}})};n.prototype.install=async function(t,i){return await c(this.getPipCmd(),["install",t].concat(i||[]))};n.prototype.isInstalled=async function(t){let i=await this.getModules();for(let s of i)if(s.name.indexOf(t)===0)return!0;return!1};n.prototype.exec=async function(t,i){return await c(this.getPyCmd(),[t].concat(i||[]))};export{n as Py};
